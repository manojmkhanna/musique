{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";;AAAA,qCAAqC;AACrC,mCAAmC;AACnC,iCAAiC;AACjC,yBAAyB;AACzB,gCAAgC;AAChC,8CAA8C;AAE9C,MAAM,EAAE,GAAG,QAAQ,CAAC,eAAe,CAAC;IAChC,KAAK,EAAE,OAAO,CAAC,KAAK;IACpB,MAAM,EAAE,OAAO,CAAC,MAAM;CACzB,CAAC,CAAC;AAEH,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,iEAAiE,CAAC;KACxF,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;KAC9B,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,UAAU,CAAC,WAAW,IAAI,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC;KACrE,IAAI,CAAC,MAAM;IACR,IAAI,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;IAC/B,IAAI,WAAW,GAAG,UAAU,CAAC,KAAK,CAAC;IAEnC,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM;IAEtB,CAAC,CAAC,CAAC;IAEH,IAAI,OAAO,GAAG,UAAU;UAClB,WAAW,CAAC,QAAQ,GAAG,GAAG;UAC1B,WAAW,CAAC,IAAI,GAAG,GAAG;UACtB,WAAW,CAAC,KAAK,GAAG,GAAG,CAAC;IAC9B,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;IAE9C,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAErB,IAAI,QAAQ,GAAG,OAAO,GAAG,UAAU,CAAC,KAAK,GAAG,MAAM,CAAC;IACnD,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;IAEhD,IAAI,MAAM,GAAG,EAAE,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;IAE5C,6DAA6D;IAC7D,uBAAuB;IACvB,gCAAgC;IAChC,EAAE;IACF,cAAc;IACd,4BAA4B;IAC5B,4BAA4B;IAC5B,KAAK;AAGT,CAAC,CAAC;KACD,KAAK,CAAC,KAAK;IACR,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC","file":"index.js","sourcesContent":["import * as readline from \"readline\";\r\nimport * as musique from \"musique\";\r\nimport * as mkdirp from \"mkdirp\";\r\nimport * as fs from \"fs\";\r\n// import * as http from \"http\";\r\n// import * as request from \"request-promise\";\r\n\r\nconst rl = readline.createInterface({\r\n    input: process.stdin,\r\n    output: process.stdout\r\n});\r\n\r\nmusique.parseSong(\"saavn\", \"https://www.saavn.com/s/song/tamil/Mersal/Neethanae/MiIPaAFCBlc\")\r\n    .then(parser => parser.parse())\r\n    .then(parser => parser.parseAlbum(childParser => childParser.parse()))\r\n    .then(parser => {\r\n        let songOutput = parser.output;\r\n        let albumOutput = songOutput.album;\r\n\r\n        rl.question(\"\", answer => {\r\n\r\n        });\r\n\r\n        let dirName = \"./Songs/\"\r\n            + albumOutput.language + \"/\"\r\n            + albumOutput.year + \"/\"\r\n            + albumOutput.title + \"/\";\r\n        dirName = dirName.replace(/[\\\\:*?\"<>|]/g, \"\");\r\n\r\n        mkdirp.sync(dirName);\r\n\r\n        let fileName = dirName + songOutput.title + \".mp3\";\r\n        fileName = fileName.replace(/[\\\\:*?\"<>|]/g, \"\");\r\n\r\n        let stream = fs.createWriteStream(fileName);\r\n\r\n        // http.get(songOutput.mp3.replace(\"https\", \"http\"), res => {\r\n        //     res.pipe(stream)\r\n        //         .on(\"finish\", () => {\r\n        //\r\n        //         });\r\n        // }).on(\"error\", error => {\r\n        //     console.error(error);\r\n        // })\r\n\r\n\r\n    })\r\n    .catch(error => {\r\n        console.error(error);\r\n    });\r\n"]}