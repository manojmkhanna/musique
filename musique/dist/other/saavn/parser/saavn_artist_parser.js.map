{"version":3,"sources":["../src/other/saavn/parser/saavn_artist_parser.ts"],"names":[],"mappings":";;AAAA,oCAAoC;AACpC,2CAA2C;AAC3C,mCAAmC;AAEnC,iEAAyD;AACzD,oEAA4D;AAE5D,uBAAuC,SAAQ,uBAAY;IAC7C,aAAa;QACnB,MAAM,CAAC,IAAI,OAAO,CAAgB,CAAC,OAAO,EAAE,MAAM;YAC9C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;gBACxB,OAAO,EAAE;oBACL,QAAQ,EAAE,uFAAuF;oBACjG,iBAAiB,EAAE,mBAAmB;oBACtC,iBAAiB,EAAE,gBAAgB;oBACnC,eAAe,EAAE,WAAW;oBAC5B,YAAY,EAAE,YAAY;oBAC1B,KAAK,EAAE,GAAG;oBACV,MAAM,EAAE,eAAe;oBACvB,2BAA2B,EAAE,GAAG;oBAChC,YAAY,EAAE,qHAAqH;iBACtI;gBACD,IAAI,EAAE,IAAI;aACb,CAAC;iBACG,IAAI,CAAC,IAAI;gBACN,IAAI,OAAO,GAAG,IAAI,wBAAa,EAAE,CAAC;gBAClC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;gBAEpB,OAAO,CAAC,OAAO,CAAC,CAAC;YACrB,CAAC,CAAC;iBACD,KAAK,CAAC,KAAK;gBACR,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC;IAES,cAAc;QACpB,MAAM,CAAC,IAAI,OAAO,CAAM,OAAO;YAC3B,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;YAEtB,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAES,WAAW;QACjB,MAAM,CAAC,IAAI,OAAO,CAAS,OAAO;YAC9B,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAExC,OAAO,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AA7CD,oCA6CC","file":"saavn_artist_parser.js","sourcesContent":["import * as Promise from \"bluebird\";\r\nimport * as request from \"request-promise\";\r\nimport * as cheerio from \"cheerio\";\r\n\r\nimport ArtistParser from \"../../../parser/artist_parser\";\r\nimport ArtistContent from \"../../../content/artist_content\";\r\n\r\nexport default class SaavnArtistParser extends ArtistParser {\r\n    protected createContent(): Promise<ArtistContent> {\r\n        return new Promise<ArtistContent>((resolve, reject) => {\r\n            request.get(this.input.url, {\r\n                headers: {\r\n                    \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\",\r\n                    \"Accept-Encoding\": \"gzip, deflate, br\",\r\n                    \"Accept-Language\": \"en,en-US;q=0.8\",\r\n                    \"Cache-Control\": \"max-age=0\",\r\n                    \"Connection\": \"keep-alive\",\r\n                    \"DNT\": \"1\",\r\n                    \"Host\": \"www.saavn.com\",\r\n                    \"Upgrade-Insecure-Requests\": \"1\",\r\n                    \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.101 Safari/537.36\"\r\n                },\r\n                gzip: true\r\n            })\r\n                .then(html => {\r\n                    let content = new ArtistContent();\r\n                    content.html = html;\r\n\r\n                    resolve(content);\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    protected contentCreated(): Promise<any> {\r\n        return new Promise<any>(resolve => {\r\n            this.input.albums = [];\r\n            this.input.songs = [];\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    protected createTitle(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            resolve($(\"h1.page-title\").first().text());\r\n        });\r\n    }\r\n}\r\n"]}