{"version":3,"sources":["../src/other/saavn/parser/saavn_song_parser.ts"],"names":[],"mappings":";;AAAA,oCAAoC;AACpC,mCAAmC;AACnC,mCAAmC;AACnC,iCAAiC;AAEjC,6DAAqD;AACrD,gEAAwD;AACxD,wDAAgD;AAChD,4DAAoD;AACpD,8DAAsD;AACtD,kEAA0D;AAC1D,+DAAuD;AACvD,iEAAyD;AAEzD,MAAM,QAAQ,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAE7C,qBAAqC,SAAQ,qBAAU;IACzC,aAAa;QACnB,MAAM,CAAC,IAAI,OAAO,CAAc,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAChD,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,yBAAc,CAAC,eAAe,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE;gBAC9E,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,MAAM,CAAC,KAAK,CAAC,CAAC;oBACd,MAAM,CAAC;gBACX,CAAC;gBAED,IAAI,OAAO,GAAgB,IAAI,sBAAW,EAAE,CAAC;gBAC7C,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;gBAEpB,OAAO,CAAC,OAAO,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAES,cAAc;QACpB,MAAM,CAAC,IAAI,OAAO,CAAO,OAAO,CAAC,EAAE;YAC/B,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAExC,IAAI,UAAU,GAAe,IAAI,qBAAU,EAAE,CAAC;YAC9C,UAAU,CAAC,GAAG,GAAG,CAAC,CAAC,oBAAoB,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAE9D,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC;YAE9B,IAAI,YAAY,GAAkB,EAAE,CAAC;YAErC,CAAC,CAAC,0BAA0B,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,OAAO,EAAE,EAAE;gBAClD,IAAI,WAAW,GAAgB,IAAI,sBAAW,EAAE,CAAC;gBACjD,WAAW,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;gBAExE,YAAY,CAAC,KAAK,CAAC,GAAG,WAAW,CAAC;YACtC,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,YAAY,CAAC;YAElC,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAES,cAAc;QACpB,MAAM,CAAC,IAAI,OAAO,CAAS,OAAO,CAAC,EAAE;YACjC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAExC,OAAO,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,SAAS,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;IACP,CAAC;IAES,YAAY;QAClB,MAAM,CAAC,IAAI,OAAO,CAAS,OAAO,CAAC,EAAE;YACjC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAExC,IAAI,MAAM,GAAkB,CAAC,CAAC,qCAAqC,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC;YAEpF,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;YAC1E,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,OAAO,EAAE,CAAC;YACd,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAES,SAAS;QACf,MAAM,CAAC,IAAI,OAAO,CAAS,OAAO,CAAC,EAAE;YACjC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAExC,IAAI,IAAI,GAAW,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC;YAErE,IAAI,MAAM,GAAG,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC;YAEhE,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAEtE,OAAO,CAAC,wBAAwB,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;IACP,CAAC;IAES,WAAW;QACjB,MAAM,CAAC,IAAI,OAAO,CAAS,OAAO,CAAC,EAAE;YACjC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAExC,OAAO,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;IACP,CAAC;IAES,WAAW;QACjB,MAAM,CAAC,IAAI,OAAO,CAAS,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC3C,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAExC,IAAI,EAAE,GAAW,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC;YAEtE,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,yBAAc,CAAC,eAAe,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE;gBACpF,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,MAAM,CAAC,KAAK,CAAC,CAAC;oBACd,MAAM,CAAC;gBACX,CAAC;gBAED,IAAI,YAAY,GAAiB,IAAI,uBAAY,EAAE,CAAC;gBACpD,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC;gBAEzB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,YAAY,CAAC;gBAElC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAE3B,OAAO,CAAC,CAAC,CAAC,2BAA2B,GAAG,EAAE,GAAG,aAAa,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;YAChF,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAES,UAAU,CAAC,gBAAyC;QAC1D,MAAM,CAAC,IAAI,OAAO,CAAS,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC3C,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAExC,IAAI,IAAI,GAAW,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC;YAErE,IAAI,MAAM,GAAG,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC;YAEhE,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAEtE,IAAI,GAAG,GAAW,wBAAwB,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC;YAE1E,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE;gBAClB,QAAQ,EAAE,IAAI;aACjB,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE;gBACzB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,MAAM,CAAC,KAAK,CAAC,CAAC;oBACd,MAAM,CAAC;gBACX,CAAC;gBAED,EAAE,CAAC,CAAC,QAAQ,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC,CAAC;oBAC7B,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;wBACtC,QAAQ,EAAE,IAAI;qBACjB,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE;wBACzB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;4BACR,MAAM,CAAC,KAAK,CAAC,CAAC;4BACd,MAAM,CAAC;wBACX,CAAC;wBAED,OAAO,CAAC,IAAI,CAAC,CAAC;oBAClB,CAAC,CAAC,EAAE;wBACA,QAAQ,EAAE,EAAE;qBACf,CAAC;yBACG,EAAE,CAAC,UAAU,EAAE,CAAC,KAAa,EAAE,EAAE;wBAC9B,gBAAgB,CAAC,KAAK,CAAC,CAAC;oBAC5B,CAAC,CAAC,CAAC;oBAEP,MAAM,CAAC;gBACX,CAAC;gBAED,OAAO,CAAC,IAAI,CAAC,CAAC;YAClB,CAAC,CAAC,EAAE;gBACA,QAAQ,EAAE,EAAE;aACf,CAAC;iBACG,EAAE,CAAC,UAAU,EAAE,CAAC,KAAa,EAAE,EAAE;gBAC9B,gBAAgB,CAAC,KAAK,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC;IAES,WAAW;QACjB,MAAM,CAAC,IAAI,OAAO,CAAc,OAAO,CAAC,EAAE;YACtC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAExC,IAAI,WAAW,GAAgB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;YAEjD,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACf,WAAW,GAAG,IAAI,sBAAW,EAAE,CAAC;YACpC,CAAC;YAED,IAAI,OAAO,GAAG,CAAC,CAAC,oBAAoB,CAAC,CAAC,KAAK,EAAE,CAAC;YAE9C,WAAW,CAAC,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACvC,WAAW,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;YAEnC,OAAO,CAAC,WAAW,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAES,aAAa;QACnB,MAAM,CAAC,IAAI,OAAO,CAAiB,OAAO,CAAC,EAAE;YACzC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAExC,IAAI,aAAa,GAAmB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;YAExD,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBACjB,aAAa,GAAG,EAAE,CAAC;YACvB,CAAC;YAED,CAAC,CAAC,0BAA0B,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,OAAO,EAAE,EAAE;gBAClD,IAAI,YAAY,GAAiB,aAAa,CAAC,KAAK,CAAC,CAAC;gBAEtD,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;oBAChB,YAAY,GAAG,IAAI,uBAAY,EAAE,CAAC;gBACtC,CAAC;gBAED,YAAY,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;gBACzE,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;gBAEvC,aAAa,CAAC,KAAK,CAAC,GAAG,YAAY,CAAC;YACxC,CAAC,CAAC,CAAC;YAEH,OAAO,CAAC,aAAa,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AA5MD,kCA4MC","file":"saavn_song_parser.js","sourcesContent":["import * as Promise from \"bluebird\";\r\nimport * as request from \"request\";\r\nimport * as cheerio from \"cheerio\";\r\nimport * as crypto from \"crypto\";\r\n\r\nimport SongParser from \"../../../parser/song_parser\";\r\nimport SongContent from \"../../../content/song_content\";\r\nimport SaavnConstants from \"../saavn_constants\";\r\nimport AlbumInput from \"../../../input/album_input\";\r\nimport ArtistInput from \"../../../input/artist_input\";\r\nimport AlbumContent from \"../../../content/album_content\";\r\nimport AlbumOutput from \"../../../output/album_output\";\r\nimport ArtistOutput from \"../../../output/artist_output\";\r\n\r\nconst progress = require(\"request-progress\");\r\n\r\nexport default class SaavnSongParser extends SongParser {\r\n    protected createContent(): Promise<SongContent> {\r\n        return new Promise<SongContent>((resolve, reject) => {\r\n            request(this.input.url, SaavnConstants.REQUEST_OPTIONS, (error, response, body) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n\r\n                let content: SongContent = new SongContent();\r\n                content.html = body;\r\n\r\n                resolve(content);\r\n            });\r\n        });\r\n    }\r\n\r\n    protected contentCreated(): Promise<void> {\r\n        return new Promise<void>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            let albumInput: AlbumInput = new AlbumInput();\r\n            albumInput.url = $(\"h2.page-subtitle>a\").first().attr(\"href\");\r\n\r\n            this.input.album = albumInput;\r\n\r\n            let artistInputs: ArtistInput[] = [];\r\n\r\n            $(\"h4:contains(Singers)+p>a\").each((index, element) => {\r\n                let artistInput: ArtistInput = new ArtistInput();\r\n                artistInput.url = $(element).attr(\"href\").replace(\"-albums\", \"-artist\");\r\n\r\n                artistInputs[index] = artistInput;\r\n            });\r\n\r\n            this.input.artists = artistInputs;\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    protected createDuration(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            resolve($(\"h2.page-subtitle\").first().text().match(/ Â· (.+)/)![1]);\r\n        });\r\n    }\r\n\r\n    protected createLyrics(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            let lyrics: string | null = $(\"h2.page-subtitle:contains(Lyrics)+p\").first().html();\r\n\r\n            if (lyrics) {\r\n                resolve(lyrics.replace(/(<br>){2,}/g, \"\\n\\n\").replace(/<br>/g, \"\\n\"));\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    protected createMp3(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            let hash: string = JSON.parse($(\"div.song-json\").first().text()).url;\r\n\r\n            let cipher = crypto.createDecipheriv(\"des-ecb\", \"38346591\", \"\");\r\n\r\n            hash = cipher.update(hash, \"base64\", \"ascii\") + cipher.final(\"ascii\");\r\n\r\n            resolve(\"https://h.saavncdn.com\" + hash.substr(10) + \".mp3\");\r\n        });\r\n    }\r\n\r\n    protected createTitle(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            resolve($(\"h1.page-title\").first().text().trim());\r\n        });\r\n    }\r\n\r\n    protected createTrack(): Promise<string> {\r\n        return new Promise<string>((resolve, reject) => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            let id: string = JSON.parse($(\"div.song-json\").first().text()).songid;\r\n\r\n            request(this.input.album.url, SaavnConstants.REQUEST_OPTIONS, (error, response, body) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n\r\n                let albumContent: AlbumContent = new AlbumContent();\r\n                albumContent.html = body;\r\n\r\n                this.content.album = albumContent;\r\n\r\n                let $ = cheerio.load(body);\r\n\r\n                resolve($(\"li.song-wrap[data-songid=\" + id + \"]>div.index\").first().text());\r\n            });\r\n        });\r\n    }\r\n\r\n    protected createFile(progressCallback: (progress: any) => void): Promise<Buffer> {\r\n        return new Promise<Buffer>((resolve, reject) => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            let hash: string = JSON.parse($(\"div.song-json\").first().text()).url;\r\n\r\n            let cipher = crypto.createDecipheriv(\"des-ecb\", \"38346591\", \"\");\r\n\r\n            hash = cipher.update(hash, \"base64\", \"ascii\") + cipher.final(\"ascii\");\r\n\r\n            let mp3: string = \"https://h.saavncdn.com\" + hash.substr(10) + \"_320.mp3\";\r\n\r\n            progress(request(mp3, {\r\n                encoding: null\r\n            }, (error, response, body) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n\r\n                if (response.statusCode == 403) {\r\n                    progress(request(mp3.replace(\"_320\", \"\"), {\r\n                        encoding: null\r\n                    }, (error, response, body) => {\r\n                        if (error) {\r\n                            reject(error);\r\n                            return;\r\n                        }\r\n\r\n                        resolve(body);\r\n                    }), {\r\n                        throttle: 16\r\n                    })\r\n                        .on(\"progress\", (state: object) => {\r\n                            progressCallback(state);\r\n                        });\r\n\r\n                    return;\r\n                }\r\n\r\n                resolve(body);\r\n            }), {\r\n                throttle: 16\r\n            })\r\n                .on(\"progress\", (state: object) => {\r\n                    progressCallback(state);\r\n                });\r\n        });\r\n    }\r\n\r\n    protected createAlbum(): Promise<AlbumOutput> {\r\n        return new Promise<AlbumOutput>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            let albumOutput: AlbumOutput = this.output.album;\r\n\r\n            if (!albumOutput) {\r\n                albumOutput = new AlbumOutput();\r\n            }\r\n\r\n            let element = $(\"h2.page-subtitle>a\").first();\r\n\r\n            albumOutput.url = element.attr(\"href\");\r\n            albumOutput.title = element.text();\r\n\r\n            resolve(albumOutput);\r\n        });\r\n    }\r\n\r\n    protected createArtists(): Promise<ArtistOutput[]> {\r\n        return new Promise<ArtistOutput[]>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            let artistOutputs: ArtistOutput[] = this.output.artists;\r\n\r\n            if (!artistOutputs) {\r\n                artistOutputs = [];\r\n            }\r\n\r\n            $(\"h4:contains(Singers)+p>a\").each((index, element) => {\r\n                let artistOutput: ArtistOutput = artistOutputs[index];\r\n\r\n                if (!artistOutput) {\r\n                    artistOutput = new ArtistOutput();\r\n                }\r\n\r\n                artistOutput.url = $(element).attr(\"href\").replace(\"-albums\", \"-artist\");\r\n                artistOutput.title = $(element).text();\r\n\r\n                artistOutputs[index] = artistOutput;\r\n            });\r\n\r\n            resolve(artistOutputs);\r\n        });\r\n    }\r\n}\r\n"]}