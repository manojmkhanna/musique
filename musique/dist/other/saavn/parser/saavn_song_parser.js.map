{"version":3,"sources":["../src/other/saavn/parser/saavn_song_parser.ts"],"names":[],"mappings":"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","file":"saavn_song_parser.js","sourcesContent":["import * as Promise from \"bluebird\";\r\nimport * as request from \"request-promise\";\r\nimport * as cheerio from \"cheerio\";\r\nimport * as crypto from \"crypto\";\r\n\r\nimport SongParser from \"../../../parser/song_parser\";\r\nimport SongContent from \"../../../content/song_content\";\r\nimport AlbumInput from \"../../../input/album_input\";\r\nimport ArtistInput from \"../../../input/artist_input\";\r\nimport AlbumOutput from \"../../../output/album_output\";\r\nimport ArtistOutput from \"../../../output/artist_output\";\r\n\r\nexport default class SaavnSongParser extends SongParser {\r\n    protected createContent(): Promise<SongContent> {\r\n        return new Promise<SongContent>((resolve, reject) => {\r\n            request.get(this.input.url, {\r\n                headers: {\r\n                    \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\",\r\n                    \"Accept-Encoding\": \"gzip, deflate, br\",\r\n                    \"Accept-Language\": \"en,en-US;q=0.8\",\r\n                    \"Cache-Control\": \"max-age=0\",\r\n                    \"Connection\": \"keep-alive\",\r\n                    \"DNT\": \"1\",\r\n                    \"Host\": \"www.saavn.com\",\r\n                    \"Upgrade-Insecure-Requests\": \"1\",\r\n                    \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.101 Safari/537.36\"\r\n                },\r\n                gzip: true\r\n            })\r\n                .then(html => {\r\n                    let content = new SongContent();\r\n                    content.html = html;\r\n\r\n                    resolve(content);\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    protected contentCreated(): Promise<any> {\r\n        return new Promise<any>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            let albumInput = new AlbumInput();\r\n            let artistInputs: ArtistInput[] = [];\r\n\r\n            $(\"h2.page-subtitle>a\").each((index, element) => {\r\n                if (index == 0) {\r\n                    albumInput.url = $(element).attr(\"href\");\r\n                } else {\r\n                    let artistInput = new ArtistInput();\r\n                    artistInput.url = $(element).attr(\"href\");\r\n                    artistInputs.push(artistInput);\r\n                }\r\n            });\r\n\r\n            this.input.album = albumInput;\r\n            this.input.artists = artistInputs;\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    protected createDuration(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            let match = $(\"h2.page-subtitle\").first().text().match(/ Â· (.+)$/);\r\n\r\n            if (match) {\r\n                resolve(match[1]);\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    protected createLyrics(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            let lyrics = $(\"h2.page-subtitle:contains(Lyrics)+p\").first().html();\r\n\r\n            if (lyrics) {\r\n                resolve(lyrics.replace(/(<br>){2,}/g, \"\\n\\n\").replace(/<br>/g, \"\\n\"));\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    protected createMp3(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            let cipher = crypto.createDecipheriv(\"des-ecb\", \"38346591\", \"\");\r\n\r\n            let buffer = Buffer.from(JSON.parse($(\"div.song-json\").first().text()).url, \"base64\");\r\n            buffer = Buffer.concat([cipher.update(buffer), cipher.final()]);\r\n\r\n            resolve(\"https://h.saavncdn.com\" + buffer.toString().substr(10) + \"_320.mp3\");\r\n        });\r\n    }\r\n\r\n    protected createTitle(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            resolve($(\"h1.page-title\").first().text().trim());\r\n        });\r\n    }\r\n\r\n    protected createTrack(): Promise<number> {\r\n        return new Promise<number>(resolve => {\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    protected createAlbum(): Promise<AlbumOutput> {\r\n        return new Promise<AlbumOutput>(resolve => {\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    protected createArtists(): Promise<ArtistOutput[]> {\r\n        return new Promise<ArtistOutput[]>(resolve => {\r\n            resolve();\r\n        });\r\n    }\r\n}\r\n"]}