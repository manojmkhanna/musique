{"version":3,"sources":["../src/other/saavn/parser/saavn_song_parser.ts"],"names":[],"mappings":"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","file":"saavn_song_parser.js","sourcesContent":["import * as Promise from \"bluebird\";\r\nimport * as rp from \"request-promise\";\r\nimport * as cheerio from \"cheerio\";\r\nimport * as crypto from \"crypto\";\r\nimport * as request from \"request\";\r\n\r\nimport SongParser from \"../../../parser/song_parser\";\r\nimport SongContent from \"../../../content/song_content\";\r\nimport SaavnConstants from \"../saavn_constants\";\r\nimport AlbumInput from \"../../../input/album_input\";\r\nimport ArtistInput from \"../../../input/artist_input\";\r\nimport AlbumContent from \"../../../content/album_content\";\r\nimport AlbumOutput from \"../../../output/album_output\";\r\nimport ArtistOutput from \"../../../output/artist_output\";\r\n\r\nconst progress = require(\"request-progress\");\r\n\r\nexport default class SaavnSongParser extends SongParser {\r\n    protected createContent(): Promise<SongContent> {\r\n        return new Promise<SongContent>((resolve, reject) => {\r\n            rp.get(this.input.url, SaavnConstants.REQUEST_OPTIONS)\r\n                .then(html => {\r\n                    let content = new SongContent();\r\n                    content.html = html;\r\n\r\n                    resolve(content);\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    protected contentCreated(): Promise<void> {\r\n        return new Promise<void>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            let albumInput = new AlbumInput();\r\n            let artistInputs: ArtistInput[] = [];\r\n\r\n            $(\"h2.page-subtitle>a\").each((index, element) => {\r\n                if (index == 0) {\r\n                    albumInput.url = $(element).attr(\"href\");\r\n                } else {\r\n                    let artistInput = new ArtistInput();\r\n                    artistInput.url = $(element).attr(\"href\").replace(\"-albums\", \"-artist\");\r\n\r\n                    artistInputs[index - 1] = artistInput;\r\n                }\r\n            });\r\n\r\n            this.input.album = albumInput;\r\n            this.input.artists = artistInputs;\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    protected createDuration(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            resolve($(\"h2.page-subtitle\").first().text().match(/ Â· (.+)/)![1]);\r\n        });\r\n    }\r\n\r\n    protected createLyrics(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            let lyrics = $(\"h2.page-subtitle:contains(Lyrics)+p\").first().html();\r\n\r\n            if (lyrics) {\r\n                resolve(lyrics.replace(/(<br>){2,}/g, \"\\n\\n\").replace(/<br>/g, \"\\n\"));\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    protected createMp3(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            let hash = JSON.parse($(\"div.song-json\").first().text()).url;\r\n\r\n            let cipher = crypto.createDecipheriv(\"des-ecb\", \"38346591\", \"\");\r\n\r\n            hash = cipher.update(hash, \"base64\", \"ascii\") + cipher.final(\"ascii\");\r\n\r\n            resolve(\"https://h.saavncdn.com\" + hash.substr(10) + \"_320.mp3\");\r\n        });\r\n    }\r\n\r\n    protected createTitle(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            resolve($(\"h1.page-title\").first().text().trim());\r\n        });\r\n    }\r\n\r\n    protected createTrack(): Promise<string> {\r\n        return new Promise<string>((resolve, reject) => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            let id = JSON.parse($(\"div.song-json\").first().text()).songid;\r\n\r\n            rp.get(this.input.album.url, SaavnConstants.REQUEST_OPTIONS)\r\n                .then(html => {\r\n                    let albumContent = new AlbumContent();\r\n                    albumContent.html = html;\r\n\r\n                    this.content.album = albumContent;\r\n\r\n                    let $ = cheerio.load(html);\r\n\r\n                    resolve($(\"li.song-wrap[data-songid=\" + id + \"]>div.index\").first().text());\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    protected createFile(progressCallback: (progress: object) => void): Promise<Buffer> {\r\n        return new Promise<Buffer>((resolve, reject) => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            let hash = JSON.parse($(\"div.song-json\").first().text()).url;\r\n\r\n            let cipher = crypto.createDecipheriv(\"des-ecb\", \"38346591\", \"\");\r\n\r\n            hash = cipher.update(hash, \"base64\", \"ascii\") + cipher.final(\"ascii\");\r\n\r\n            let mp3 = \"https://h.saavncdn.com\" + hash.substr(10) + \"_320.mp3\";\r\n\r\n            progress(request(mp3, {\r\n                encoding: null\r\n            }, (error, response, body) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n\r\n                resolve(body);\r\n            }), {\r\n                throttle: 33\r\n            })\r\n                .on(\"progress\", (state: object) => {\r\n                    progressCallback(state);\r\n                });\r\n        });\r\n    }\r\n\r\n    protected createAlbum(): Promise<AlbumOutput> {\r\n        return new Promise<AlbumOutput>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            let albumOutput = this.output.album;\r\n\r\n            if (!albumOutput) {\r\n                albumOutput = new AlbumOutput();\r\n            }\r\n\r\n            let element = $(\"h2.page-subtitle>a\").first();\r\n\r\n            albumOutput.url = element.attr(\"href\");\r\n            albumOutput.title = element.text();\r\n\r\n            resolve(albumOutput);\r\n        });\r\n    }\r\n\r\n    protected createArtists(): Promise<ArtistOutput[]> {\r\n        return new Promise<ArtistOutput[]>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            let artistOutputs: ArtistOutput[] = this.output.artists;\r\n\r\n            if (!artistOutputs) {\r\n                artistOutputs = [];\r\n            }\r\n\r\n            $(\"h2.page-subtitle>a\").each((index, element) => {\r\n                if (index > 0) {\r\n                    let artistOutput = artistOutputs[index];\r\n\r\n                    if (!artistOutput) {\r\n                        artistOutput = new ArtistOutput();\r\n                    }\r\n\r\n                    artistOutput.url = $(element).attr(\"href\").replace(\"-albums\", \"-artist\");\r\n                    artistOutput.title = $(element).text();\r\n\r\n                    artistOutputs[index - 1] = artistOutput;\r\n                }\r\n            });\r\n\r\n            resolve(artistOutputs);\r\n        });\r\n    }\r\n}\r\n"]}