{"version":3,"sources":["../src/other/saavn/parser/saavn_search_parser.ts"],"names":[],"mappings":"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","file":"saavn_search_parser.js","sourcesContent":["import * as Promise from \"bluebird\";\r\nimport * as cheerio from \"cheerio\";\r\nimport * as request from \"request\";\r\n\r\nimport SearchParser from \"../../../parser/search_parser\";\r\nimport SongOutput from \"../../../output/song_output\";\r\nimport AlbumOutput from \"../../../output/album_output\";\r\nimport ArtistOutput from \"../../../output/artist_output\";\r\nimport PlaylistOutput from \"../../../output/playlist_output\";\r\nimport SongParser from \"../../../parser/song_parser\";\r\nimport AlbumParser from \"../../../parser/album_parser\";\r\nimport PlaylistParser from \"../../../parser/playlist_parser\";\r\nimport SaavnConstants from \"../saavn_constants\";\r\nimport SongInput from \"../../../input/song_input\";\r\nimport AlbumInput from \"../../../input/album_input\";\r\nimport PlaylistInput from \"../../../input/playlist_input\";\r\n\r\nexport default class SaavnSearchParser extends SearchParser {\r\n    private songPageHtmls: string[] = [];\r\n    private albumPageHtmls: string[] = [];\r\n    private playlistPageHtmls: string[] = [];\r\n\r\n    protected contentCreated(): Promise<void> {\r\n        return new Promise<void>(resolve => {\r\n            this.input.songs = [];\r\n            this.input.albums = [];\r\n            this.input.artists = [];\r\n            this.input.playlists = [];\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    protected createSongs(): Promise<SongOutput[]> {\r\n        return this.createSongPage()\r\n            .then(() => {\r\n                let songOutputs: SongOutput[] = this.output.songs;\r\n\r\n                if (!songOutputs) {\r\n                    songOutputs = [];\r\n                }\r\n\r\n                for (let songPageHtml of this.songPageHtmls) {\r\n                    let $ = cheerio.load(songPageHtml);\r\n\r\n                    $(\"span.title>a\").each((index, element) => {\r\n                        let songOutput: SongOutput = songOutputs[index];\r\n\r\n                        if (!songOutput) {\r\n                            songOutput = new SongOutput();\r\n                        }\r\n\r\n                        songOutput.url = $(element).attr(\"href\");\r\n                        songOutput.title = $(element).text();\r\n\r\n                        songOutputs[index] = songOutput;\r\n                    })\r\n                }\r\n\r\n                return songOutputs;\r\n            });\r\n    }\r\n\r\n    protected createAlbums(): Promise<AlbumOutput[]> {\r\n        return this.createAlbumPage()\r\n            .then(() => {\r\n                let albumOutputs: AlbumOutput[] = this.output.albums;\r\n\r\n                if (!albumOutputs) {\r\n                    albumOutputs = [];\r\n                }\r\n\r\n                for (let albumPageHtml of this.albumPageHtmls) {\r\n                    let $ = cheerio.load(albumPageHtml);\r\n\r\n                    $(\"h3.title>a\").each((index, element) => {\r\n                        let albumOutput: AlbumOutput = albumOutputs[index];\r\n\r\n                        if (!albumOutput) {\r\n                            albumOutput = new AlbumOutput();\r\n                        }\r\n\r\n                        albumOutput.url = $(element).attr(\"href\");\r\n                        albumOutput.title = $(element).text();\r\n\r\n                        albumOutputs[index] = albumOutput;\r\n                    })\r\n                }\r\n\r\n                return albumOutputs;\r\n            });\r\n    }\r\n\r\n    protected createArtists(): Promise<ArtistOutput[]> {    //TODO\r\n        return super.createArtists();\r\n    }\r\n\r\n    protected createPlaylists(): Promise<PlaylistOutput[]> {\r\n        return this.createPlaylistPage()\r\n            .then(() => {\r\n                let playlistOutputs: PlaylistOutput[] = this.output.playlists;\r\n\r\n                if (!playlistOutputs) {\r\n                    playlistOutputs = [];\r\n                }\r\n\r\n                for (let playlistPageHtml of this.playlistPageHtmls) {\r\n                    let $ = cheerio.load(playlistPageHtml);\r\n\r\n                    $(\"h3>a\").each((index, element) => {\r\n                        let playlistOutput: PlaylistOutput = playlistOutputs[index];\r\n\r\n                        if (!playlistOutput) {\r\n                            playlistOutput = new PlaylistOutput();\r\n                        }\r\n\r\n                        playlistOutput.url = $(element).attr(\"href\");\r\n                        playlistOutput.title = $(element).text();\r\n\r\n                        playlistOutputs[index] = playlistOutput;\r\n                    })\r\n                }\r\n\r\n                return playlistOutputs;\r\n            });\r\n    }\r\n\r\n    public parseSongs(outputsParser?: (childParser: SongParser, index: number) => Promise<any>,\r\n                      ...indexes: number[]): Promise<this> {\r\n        let promise: Promise<any> = new Promise<any>(resolve => {\r\n            resolve();\r\n        });\r\n\r\n        if (indexes.length == 0) {\r\n            promise = promise.then(() => this.createSongPage());\r\n        } else {\r\n            let lastIndex: number = indexes.sort()[indexes.length - 1];\r\n\r\n            for (let i = this.songPageHtmls.length; i <= Math.floor(lastIndex / 10) + 1; i++) {\r\n                promise = promise.then(() => this.createSongPage());\r\n            }\r\n        }\r\n\r\n        return promise.then(() => super.parseSongs(outputsParser, ...indexes));\r\n    }\r\n\r\n    public parseAlbums(outputsParser?: (childParser: AlbumParser, index: number) => Promise<any>,\r\n                       ...indexes: number[]): Promise<this> {\r\n        let promise: Promise<any> = new Promise<any>(resolve => {\r\n            resolve();\r\n        });\r\n\r\n        if (indexes.length == 0) {\r\n            promise = promise.then(() => this.createAlbumPage());\r\n        } else {\r\n            let lastIndex: number = indexes.sort()[indexes.length - 1];\r\n\r\n            for (let i = this.albumPageHtmls.length; i <= Math.floor(lastIndex / 20) + 1; i++) {\r\n                promise = promise.then(() => this.createAlbumPage());\r\n            }\r\n        }\r\n\r\n        return promise.then(() => super.parseAlbums(outputsParser, ...indexes));\r\n    }\r\n\r\n    public parsePlaylists(outputsParser?: (childParser: PlaylistParser, index: number) => Promise<any>,\r\n                          ...indexes: number[]): Promise<this> {\r\n        let promise: Promise<any> = new Promise<any>(resolve => {\r\n            resolve();\r\n        });\r\n\r\n        if (indexes.length == 0) {\r\n            promise = promise.then(() => this.createPlaylistPage());\r\n        } else {\r\n            let lastIndex: number = indexes.sort()[indexes.length - 1];\r\n\r\n            for (let i = this.playlistPageHtmls.length; i <= Math.floor(lastIndex / 10) + 1; i++) {\r\n                promise = promise.then(() => this.createPlaylistPage());\r\n            }\r\n        }\r\n\r\n        return promise.then(() => super.parsePlaylists(outputsParser, ...indexes));\r\n    }\r\n\r\n    private createSongPage(): Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            request(\"https://www.saavn.com/search/song/\" + this.input.query + \"?p=\" + (this.songPageHtmls.length + 1),\r\n                SaavnConstants.REQUEST_OPTIONS, (error, response, body) => {\r\n                    if (error) {\r\n                        reject(error);\r\n                        return;\r\n                    }\r\n\r\n                    this.songPageHtmls.push(body);\r\n\r\n                    let $ = cheerio.load(body);\r\n\r\n                    $(\"span.title>a\").each((index, element) => {\r\n                        let songInput: SongInput = new SongInput();\r\n                        songInput.url = $(element).attr(\"href\");\r\n\r\n                        this.input.songs.push(songInput);\r\n                    });\r\n\r\n                    resolve();\r\n                });\r\n        });\r\n    }\r\n\r\n    private createAlbumPage(): Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            request(\"https://www.saavn.com/search/album/\" + this.input.query + \"?p=\" + (this.albumPageHtmls.length + 1),\r\n                SaavnConstants.REQUEST_OPTIONS, (error, response, body) => {\r\n                    if (error) {\r\n                        reject(error);\r\n                        return;\r\n                    }\r\n\r\n                    this.albumPageHtmls.push(body);\r\n\r\n                    let $ = cheerio.load(body);\r\n\r\n                    $(\"h3.title>a\").each((index, element) => {\r\n                        let albumInput: AlbumInput = new AlbumInput();\r\n                        albumInput.url = $(element).attr(\"href\");\r\n\r\n                        this.input.albums.push(albumInput);\r\n                    });\r\n\r\n                    resolve();\r\n                });\r\n        });\r\n    }\r\n\r\n    private createPlaylistPage(): Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            request(\"https://www.saavn.com/search/playlist/\" + this.input.query + \"?p=\" + (this.playlistPageHtmls.length + 1),\r\n                SaavnConstants.REQUEST_OPTIONS, (error, response, body) => {\r\n                    if (error) {\r\n                        reject(error);\r\n                        return;\r\n                    }\r\n\r\n                    this.playlistPageHtmls.push(body);\r\n\r\n                    let $ = cheerio.load(body);\r\n\r\n                    $(\"h3>a\").each((index, element) => {\r\n                        let playlistInput: PlaylistInput = new PlaylistInput();\r\n                        playlistInput.url = $(element).attr(\"href\");\r\n\r\n                        this.input.playlists.push(playlistInput);\r\n                    });\r\n\r\n                    resolve();\r\n                });\r\n        });\r\n    }\r\n}\r\n"]}