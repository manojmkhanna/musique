{"version":3,"sources":["../src/other/deezer/parser/deezer_song_parser.ts"],"names":[],"mappings":"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","file":"deezer_song_parser.js","sourcesContent":["import * as Promise from \"bluebird\";\r\nimport * as request from \"request-promise\";\r\nimport * as cheerio from \"cheerio\";\r\nimport * as crypto from \"crypto\";\r\n\r\nimport SongParser from \"../../../parser/song_parser\";\r\nimport SongContent from \"../../../content/song_content\";\r\nimport DeezerConstants from \"../deezer_constants\";\r\nimport AlbumInput from \"../../../input/album_input\";\r\nimport ArtistInput from \"../../../input/artist_input\";\r\nimport AlbumOutput from \"../../../output/album_output\";\r\nimport ArtistOutput from \"../../../output/artist_output\";\r\n\r\nexport default class DeezerSongParser extends SongParser {\r\n    protected createContent(): Promise<SongContent> {\r\n        return new Promise<SongContent>((resolve, reject) => {\r\n            request.get(this.input.url, DeezerConstants.REQUEST_OPTIONS)\r\n                .then(html => {\r\n                    let content = new SongContent();\r\n                    content.html = html;\r\n\r\n                    resolve(content);\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    protected contentCreated(): Promise<void> {\r\n        return new Promise<void>(resolve => {\r\n            let json = JSON.parse(this.content.html.match(/__DZR_APP_STATE__ = (.+?)</)![1]);\r\n\r\n            let albumInput = new AlbumInput();\r\n            albumInput.url = \"http://www.deezer.com/en/album/\" + json.DATA.ALB_ID;\r\n\r\n            this.input.album = albumInput;\r\n\r\n            let artistInputs: ArtistInput[] = [];\r\n\r\n            for (let i = 1; i < json.DATA.ARTISTS.length; i++) {\r\n                let artistInput = new ArtistInput();\r\n                artistInput.url = \"http://www.deezer.com/en/artist/\" + json.DATA.ARTISTS[i].ART_ID;\r\n\r\n                artistInputs.push(artistInput);\r\n            }\r\n\r\n            this.input.artists = artistInputs;\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    protected createDuration(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            resolve($(\"div.naboo_track_song\").last().text().match(/Length : 0*(\\d+:\\d+)/)![1]);\r\n        });\r\n    }\r\n\r\n    protected createLyrics(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            resolve($(\"div:contains(Lyrics)+div\").first().text());\r\n        });\r\n    }\r\n\r\n    protected createMp3(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let json = JSON.parse(this.content.html.match(/__DZR_APP_STATE__ = (.+?)</)![1]);\r\n\r\n            let mp3 = json.DATA.MD5_ORIGIN + \"¤3¤\" + json.DATA.SNG_ID + \"¤\" + json.DATA.MEDIA_VERSION;\r\n            mp3 = crypto.createHash(\"md5\").update(mp3, \"ascii\").digest(\"hex\") + \"¤\" + mp3 + \"¤\";\r\n\r\n            while (mp3.length % 16 > 0) {\r\n                mp3 += \" \";\r\n            }\r\n\r\n            mp3 = \"http://e-cdn-proxy-0.deezer.com/mobile/1/\"\r\n                + crypto.createCipheriv(\"aes-128-ecb\", \"jo6aey6haid2Teih\", \"\").update(mp3, \"ascii\", \"hex\");\r\n\r\n            resolve(mp3);\r\n        });\r\n    }\r\n\r\n    protected createTitle(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            resolve($(\"h1#naboo_track_title\").first().text().trim());\r\n        });\r\n    }\r\n\r\n    protected createTrack(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let json = JSON.parse(this.content.html.match(/__DZR_APP_STATE__ = (.+?)</)![1]);\r\n\r\n            resolve(json.DATA.TRACK_NUMBER);\r\n        });\r\n    }\r\n\r\n    protected createAlbum(): Promise<AlbumOutput> {\r\n        return new Promise<AlbumOutput>(resolve => {\r\n            let json = JSON.parse(this.content.html.match(/__DZR_APP_STATE__ = (.+?)</)![1]);\r\n\r\n            let albumOutput = this.output.album;\r\n\r\n            if (!albumOutput) {\r\n                albumOutput = new AlbumOutput();\r\n            }\r\n\r\n            albumOutput.url = \"http://www.deezer.com/en/album/\" + json.DATA.ALB_ID;\r\n            albumOutput.title = json.DATA.ALB_TITLE;\r\n\r\n            resolve(albumOutput);\r\n        });\r\n    }\r\n\r\n    protected createArtists(): Promise<ArtistOutput[]> {\r\n        return new Promise<ArtistOutput[]>(resolve => {\r\n            let json = JSON.parse(this.content.html.match(/__DZR_APP_STATE__ = (.+?)</)![1]);\r\n\r\n            let artistOutputs: ArtistOutput[] = this.output.artists;\r\n\r\n            if (!artistOutputs) {\r\n                artistOutputs = [];\r\n            }\r\n\r\n            for (let i = 1; i < json.DATA.ARTISTS.length; i++) {\r\n                let artistOutput = artistOutputs[i];\r\n\r\n                if (!artistOutput) {\r\n                    artistOutput = new ArtistOutput();\r\n                }\r\n\r\n                artistOutput.url = \"http://www.deezer.com/en/artist/\" + json.DATA.ARTISTS[i].ART_ID;\r\n                artistOutput.title = json.DATA.ARTISTS[i].ART_NAME;\r\n\r\n                artistOutputs[i - 1] = artistOutput;\r\n            }\r\n\r\n            resolve(artistOutputs);\r\n        });\r\n    }\r\n}\r\n"]}