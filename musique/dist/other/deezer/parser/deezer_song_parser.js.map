{"version":3,"sources":["../src/other/deezer/parser/deezer_song_parser.ts"],"names":[],"mappings":"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","file":"deezer_song_parser.js","sourcesContent":["import * as Promise from \"bluebird\";\r\nimport * as request from \"request\";\r\nimport * as cheerio from \"cheerio\";\r\nimport * as crypto from \"crypto\";\r\n\r\nimport SongParser from \"../../../parser/song_parser\";\r\nimport SongContent from \"../../../content/song_content\";\r\nimport DeezerConstants from \"../deezer_constants\";\r\nimport AlbumInput from \"../../../input/album_input\";\r\nimport ArtistInput from \"../../../input/artist_input\";\r\nimport AlbumOutput from \"../../../output/album_output\";\r\nimport ArtistOutput from \"../../../output/artist_output\";\r\n\r\nconst progress = require(\"request-progress\");\r\n\r\nexport default class DeezerSongParser extends SongParser {\r\n    protected createContent(): Promise<SongContent> {\r\n        return new Promise<SongContent>((resolve, reject) => {\r\n            request(this.input.url, DeezerConstants.REQUEST_OPTIONS, (error, response, body) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n\r\n                let content: SongContent = new SongContent();\r\n                content.html = body;\r\n\r\n                resolve(content);\r\n            });\r\n        });\r\n    }\r\n\r\n    protected contentCreated(): Promise<void> {\r\n        return new Promise<void>(resolve => {\r\n            let json: any = JSON.parse(this.content.html.match(/__DZR_APP_STATE__ = (.+?)<\\/script>/)[1]);\r\n\r\n            let albumInput: AlbumInput = new AlbumInput();\r\n            albumInput.url = \"http://www.deezer.com/en/album/\" + json.DATA.ALB_ID;\r\n\r\n            this.input.album = albumInput;\r\n\r\n            let artistInputs: ArtistInput[] = [];\r\n\r\n            for (let i = 0; i < json.DATA.ARTISTS.length; i++) {\r\n                let artistInput: ArtistInput = new ArtistInput();\r\n                artistInput.url = \"http://www.deezer.com/en/artist/\" + json.DATA.ARTISTS[i].ART_ID;\r\n\r\n                artistInputs[i] = artistInput;\r\n            }\r\n\r\n            this.input.artists = artistInputs;\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    protected createDuration(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            resolve($(\"div.naboo_track_song\").last().text().match(/Length : 0*(\\d+:\\d+)/)[1]);\r\n        });\r\n    }\r\n\r\n    protected createLyrics(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            resolve($(\"div:contains(Lyrics)+div\").first().text());\r\n        });\r\n    }\r\n\r\n    protected createMp3(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let json: any = JSON.parse(this.content.html.match(/__DZR_APP_STATE__ = (.+?)<\\/script>/)[1]);\r\n\r\n            let hash: string = json.DATA.MD5_ORIGIN + \"¤3¤\" + json.DATA.SNG_ID + \"¤\" + json.DATA.MEDIA_VERSION;\r\n\r\n            let hashMd5 = crypto.createHash(\"md5\").update(new Buffer(hash, \"binary\")).digest(\"hex\");\r\n\r\n            hash = hashMd5 + \"¤\" + hash + \"¤\";\r\n\r\n            let cipher = crypto.createCipheriv(\"aes-128-ecb\", \"jo6aey6haid2Teih\", \"\");\r\n\r\n            resolve(\"http://e-cdn-proxy-\" + json.DATA.MD5_ORIGIN.substr(0, 1)\r\n                + \".deezer.com/mobile/1/\" + cipher.update(hash, \"binary\", \"hex\") + cipher.final(\"hex\"));\r\n        });\r\n    }\r\n\r\n    protected createTitle(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            resolve($(\"h1#naboo_track_title\").first().text().trim());\r\n        });\r\n    }\r\n\r\n    protected createTrack(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let json: any = JSON.parse(this.content.html.match(/__DZR_APP_STATE__ = (.+?)<\\/script>/)[1]);\r\n\r\n            resolve(json.DATA.TRACK_NUMBER);\r\n        });\r\n    }\r\n\r\n    protected createFile(progressCallback: (progress: any) => void): Promise<Buffer> {\r\n        return new Promise<Buffer>((resolve, reject) => {\r\n            let json: any = JSON.parse(this.content.html.match(/__DZR_APP_STATE__ = (.+?)<\\/script>/)[1]);\r\n\r\n            let hash: string = json.DATA.MD5_ORIGIN + \"¤3¤\" + json.DATA.SNG_ID + \"¤\" + json.DATA.MEDIA_VERSION;\r\n\r\n            let hashMd5 = crypto.createHash(\"md5\").update(new Buffer(hash, \"binary\")).digest(\"hex\");\r\n\r\n            hash = hashMd5 + \"¤\" + hash + \"¤\";\r\n\r\n            let cipher = crypto.createCipheriv(\"aes-128-ecb\", \"jo6aey6haid2Teih\", \"\");\r\n\r\n            let mp3: string = \"http://e-cdn-proxy-\" + json.DATA.MD5_ORIGIN.substr(0, 1)\r\n                + \".deezer.com/mobile/1/\" + cipher.update(hash, \"binary\", \"hex\") + cipher.final(\"hex\");\r\n\r\n            progress(request(mp3, {\r\n                encoding: null\r\n            }, (error, response, body) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n\r\n                let keyMd5 = crypto.createHash(\"md5\").update(json.DATA.SNG_ID).digest(\"hex\");\r\n\r\n                let key: string = \"\";\r\n\r\n                for (let i = 0; i < 16; i++) {\r\n                    key += String.fromCharCode(keyMd5.charCodeAt(i)\r\n                        ^ keyMd5.charCodeAt(i + 16) ^ \"g4el58wc0zvf9na1\".charCodeAt(i));\r\n                }\r\n\r\n                for (let i = 0; i * 2048 < body.length; i++) {\r\n                    if (i % 3 == 0) {\r\n                        let cipher = crypto.createDecipheriv(\"bf-cbc\", key, \"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\");\r\n                        cipher.setAutoPadding(false);\r\n\r\n                        let buffer = Buffer.alloc(2048);\r\n\r\n                        body.copy(buffer, 0, i * 2048, i * 2048 + 2048);\r\n\r\n                        buffer = Buffer.concat([cipher.update(buffer), cipher.final()]);\r\n\r\n                        buffer.copy(body, i * 2048, 0, buffer.length);\r\n                    }\r\n                }\r\n\r\n                resolve(body);\r\n            }), {\r\n                throttle: 16\r\n            })\r\n                .on(\"progress\", (state: object) => {\r\n                    progressCallback(state);\r\n                });\r\n        });\r\n    }\r\n\r\n    protected createAlbum(): Promise<AlbumOutput> {\r\n        return new Promise<AlbumOutput>(resolve => {\r\n            let json: any = JSON.parse(this.content.html.match(/__DZR_APP_STATE__ = (.+?)<\\/script>/)[1]);\r\n\r\n            let albumOutput: AlbumOutput = this.output.album;\r\n\r\n            if (!albumOutput) {\r\n                albumOutput = new AlbumOutput();\r\n            }\r\n\r\n            albumOutput.url = \"http://www.deezer.com/en/album/\" + json.DATA.ALB_ID;\r\n            albumOutput.title = json.DATA.ALB_TITLE;\r\n\r\n            resolve(albumOutput);\r\n        });\r\n    }\r\n\r\n    protected createArtists(): Promise<ArtistOutput[]> {\r\n        return new Promise<ArtistOutput[]>(resolve => {\r\n            let json: any = JSON.parse(this.content.html.match(/__DZR_APP_STATE__ = (.+?)<\\/script>/)[1]);\r\n\r\n            let artistOutputs: ArtistOutput[] = this.output.artists;\r\n\r\n            if (!artistOutputs) {\r\n                artistOutputs = [];\r\n            }\r\n\r\n            for (let i = 0; i < json.DATA.ARTISTS.length; i++) {\r\n                let artistOutput: ArtistOutput = artistOutputs[i];\r\n\r\n                if (!artistOutput) {\r\n                    artistOutput = new ArtistOutput();\r\n                }\r\n\r\n                artistOutput.url = \"http://www.deezer.com/en/artist/\" + json.DATA.ARTISTS[i].ART_ID;\r\n                artistOutput.title = json.DATA.ARTISTS[i].ART_NAME;\r\n\r\n                artistOutputs[i] = artistOutput;\r\n            }\r\n\r\n            resolve(artistOutputs);\r\n        });\r\n    }\r\n}\r\n"]}