{"version":3,"sources":["../src/other/deezer/parser/deezer_song_parser.ts"],"names":[],"mappings":";;AAAA,oCAAoC;AACpC,2CAA2C;AAC3C,sCAAsC;AAEtC,6DAAqD;AACrD,gEAAwD;AACxD,0DAAkD;AAElD,sBAAsC,SAAQ,qBAAU;IAC1C,aAAa;QACnB,MAAM,CAAC,IAAI,OAAO,CAAc,CAAC,OAAO,EAAE,MAAM;YAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,0BAAe,CAAC,eAAe,CAAC;iBACvD,IAAI,CAAC,IAAI;gBACN,IAAI,OAAO,GAAG,IAAI,sBAAW,EAAE,CAAC;gBAChC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;gBAEpB,OAAO,CAAC,OAAO,CAAC,CAAC;YACrB,CAAC,CAAC;iBACD,KAAK,CAAC,KAAK;gBACR,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC;IAES,cAAc;QACpB,MAAM,CAAC,IAAI,OAAO,CAAO,OAAO;YAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YAEhG,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AAvBD,mCAuBC","file":"deezer_song_parser.js","sourcesContent":["import * as Promise from \"bluebird\";\r\nimport * as request from \"request-promise\";\r\n// import * as cheerio from \"cheerio\";\r\n\r\nimport SongParser from \"../../../parser/song_parser\";\r\nimport SongContent from \"../../../content/song_content\";\r\nimport DeezerConstants from \"../deezer_constants\";\r\n\r\nexport default class DeezerSongParser extends SongParser {\r\n    protected createContent(): Promise<SongContent> {\r\n        return new Promise<SongContent>((resolve, reject) => {\r\n            request.get(this.input.url, DeezerConstants.REQUEST_OPTIONS)\r\n                .then(html => {\r\n                    let content = new SongContent();\r\n                    content.html = html;\r\n\r\n                    resolve(content);\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    protected contentCreated(): Promise<void> {\r\n        return new Promise<void>(resolve => {\r\n            console.log(JSON.stringify(JSON.parse(this.content.html.match(/track: ({.+}),/)![1]), null, 2));\r\n\r\n            resolve();\r\n        });\r\n    }\r\n}\r\n"]}