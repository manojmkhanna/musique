{"version":3,"sources":["../src/other/deezer/parser/deezer_playlist_parser.ts"],"names":[],"mappings":"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","file":"deezer_playlist_parser.js","sourcesContent":["import * as Promise from \"bluebird\";\r\nimport * as request from \"request\";\r\nimport * as cheerio from \"cheerio\";\r\n\r\nimport PlaylistParser from \"../../../parser/playlist_parser\";\r\nimport PlaylistContent from \"../../../content/playlist_content\";\r\nimport DeezerConstants from \"../deezer_constants\";\r\nimport SongInput from \"../../../input/song_input\";\r\nimport SongOutput from \"../../../output/song_output\";\r\n\r\nexport default class DeezerPlaylistParser extends PlaylistParser {\r\n    protected createContent(): Promise<PlaylistContent> {\r\n        return new Promise<PlaylistContent>((resolve, reject) => {\r\n            request(this.input.url, DeezerConstants.REQUEST_OPTIONS, (error, response, body) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n\r\n                let content: PlaylistContent = new PlaylistContent();\r\n                content.html = body;\r\n\r\n                resolve(content);\r\n            });\r\n        });\r\n    }\r\n\r\n    protected contentCreated(): Promise<void> {\r\n        return new Promise<void>(resolve => {\r\n            let json: any = JSON.parse(this.content.html.match(/__DZR_APP_STATE__ = (.+?)<\\/script>/)![1]);\r\n\r\n            let songInputs: SongInput[] = [];\r\n\r\n            for (let i = 0; i < json.SONGS.data.length; i++) {\r\n                let songInput: SongInput = new SongInput();\r\n                songInput.url = \"http://www.deezer.com/en/track/\" + json.SONGS.data[i].SNG_ID;\r\n\r\n                songInputs[i] = songInput;\r\n            }\r\n\r\n            this.input.songs = songInputs;\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    protected createTitle(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            resolve($(\"h1#naboo_playlist_title\").first().text().trim());\r\n        });\r\n    }\r\n\r\n    protected createSongs(): Promise<SongOutput[]> {\r\n        return new Promise<SongOutput[]>(resolve => {\r\n            let json: any = JSON.parse(this.content.html.match(/__DZR_APP_STATE__ = (.+?)<\\/script>/)![1]);\r\n\r\n            let songOutputs: SongOutput[] = this.output.songs;\r\n\r\n            if (!songOutputs) {\r\n                songOutputs = [];\r\n            }\r\n\r\n            for (let i = 0; i < json.SONGS.data.length; i++) {\r\n                let songOutput: SongOutput = songOutputs[i];\r\n\r\n                if (!songOutput) {\r\n                    songOutput = new SongOutput();\r\n                }\r\n\r\n                songOutput.url = \"http://www.deezer.com/en/track/\" + json.SONGS.data[i].SNG_ID;\r\n                songOutput.title = json.SONGS.data[i].SNG_TITLE;\r\n\r\n                songOutputs[i] = songOutput;\r\n            }\r\n\r\n            resolve(songOutputs);\r\n        });\r\n    }\r\n}\r\n"]}