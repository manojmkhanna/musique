{"version":3,"sources":["../src/other/deezer/parser/deezer_artist_parser.ts"],"names":[],"mappings":";;AAAA,oCAAoC;AACpC,2CAA2C;AAC3C,mCAAmC;AAEnC,iEAAyD;AACzD,oEAA4D;AAC5D,0DAAkD;AAElD,wBAAwC,SAAQ,uBAAY;IAC9C,aAAa;QACnB,MAAM,CAAC,IAAI,OAAO,CAAgB,CAAC,OAAO,EAAE,MAAM;YAC9C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,0BAAe,CAAC,eAAe,CAAC;iBACvD,IAAI,CAAC,IAAI;gBACN,IAAI,OAAO,GAAG,IAAI,wBAAa,EAAE,CAAC;gBAClC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;gBAEpB,OAAO,CAAC,OAAO,CAAC,CAAC;YACrB,CAAC,CAAC;iBACD,KAAK,CAAC,KAAK;gBACR,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC;IAES,cAAc;QACpB,MAAM,CAAC,IAAI,OAAO,CAAO,OAAO;YAC5B,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;YAEtB,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAES,WAAW;QACjB,MAAM,CAAC,IAAI,OAAO,CAAS,OAAO;YAC9B,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAExC,OAAO,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AAhCD,qCAgCC","file":"deezer_artist_parser.js","sourcesContent":["import * as Promise from \"bluebird\";\r\nimport * as request from \"request-promise\";\r\nimport * as cheerio from \"cheerio\";\r\n\r\nimport ArtistParser from \"../../../parser/artist_parser\";\r\nimport ArtistContent from \"../../../content/artist_content\";\r\nimport DeezerConstants from \"../deezer_constants\";\r\n\r\nexport default class DeezerArtistParser extends ArtistParser {\r\n    protected createContent(): Promise<ArtistContent> {\r\n        return new Promise<ArtistContent>((resolve, reject) => {\r\n            request.get(this.input.url, DeezerConstants.REQUEST_OPTIONS)\r\n                .then(html => {\r\n                    let content = new ArtistContent();\r\n                    content.html = html;\r\n\r\n                    resolve(content);\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    protected contentCreated(): Promise<void> {\r\n        return new Promise<void>(resolve => {\r\n            this.input.albums = [];\r\n            this.input.songs = [];\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    protected createTitle(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            let $ = cheerio.load(this.content.html);\r\n\r\n            resolve($(\"h1#naboo_artist_name\").first().text().trim());\r\n        });\r\n    }\r\n}\r\n"]}