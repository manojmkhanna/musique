{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import * as Promise from \"bluebird\";\r\n\r\nimport SongInput from \"./input/song_input\";\r\nimport SongOutput from \"./output/song_output\";\r\nimport SongContent from \"./content/song_content\";\r\nimport SongParser from \"./parser/song_parser\";\r\nimport AlbumInput from \"./input/album_input\";\r\nimport AlbumOutput from \"./output/album_output\";\r\nimport AlbumContent from \"./content/album_content\";\r\nimport AlbumParser from \"./parser/album_parser\";\r\nimport ArtistInput from \"./input/artist_input\";\r\nimport ArtistOutput from \"./output/artist_output\";\r\nimport ArtistContent from \"./content/artist_content\";\r\nimport ArtistParser from \"./parser/artist_parser\";\r\nimport PlaylistInput from \"./input/playlist_input\";\r\nimport PlaylistOutput from \"./output/playlist_output\";\r\nimport PlaylistContent from \"./content/playlist_content\";\r\nimport PlaylistParser from \"./parser/playlist_parser\";\r\nimport SearchInput from \"./input/search_input\";\r\nimport SearchOutput from \"./output/search_output\";\r\nimport SearchContent from \"./content/search_content\";\r\nimport SearchParser from \"./parser/search_parser\";\r\nimport Platform from \"./platform/platform\";\r\nimport {PlatformName} from \"./platform/platform_name\";\r\nimport DeezerPlatform from \"./other/deezer/deezer_platform\";\r\nimport SaavnPlatform from \"./other/saavn/saavn_platform\";\r\n\r\nexport {\r\n    SongInput, SongOutput, SongContent, SongParser,\r\n    AlbumInput, AlbumOutput, AlbumContent, AlbumParser,\r\n    ArtistInput, ArtistOutput, ArtistContent, ArtistParser,\r\n    PlaylistInput, PlaylistOutput, PlaylistContent, PlaylistParser,\r\n    SearchInput, SearchOutput, SearchContent, SearchParser\r\n};\r\n\r\nlet deezerPlatform: DeezerPlatform;\r\nlet saavnPlatform: SaavnPlatform;\r\n\r\nfunction createPlatform(platformName: PlatformName): Platform {\r\n    if (platformName === \"deezer\") {\r\n        if (!deezerPlatform) {\r\n            deezerPlatform = new DeezerPlatform();\r\n        }\r\n\r\n        return deezerPlatform;\r\n    } else if (platformName === \"saavn\") {\r\n        if (!saavnPlatform) {\r\n            saavnPlatform = new SaavnPlatform();\r\n        }\r\n\r\n        return saavnPlatform;\r\n    } else {\r\n        throw new Error();\r\n    }\r\n}\r\n\r\nexport function parseSong(platformName: PlatformName,\r\n                          url: string): Promise<SongParser> {\r\n    return createPlatform(platformName)\r\n        .createSongParser()\r\n        .create(() => new Promise<SongInput>(resolve => {\r\n            let input = new SongInput();\r\n            input.url = url;\r\n\r\n            resolve(input);\r\n        }));\r\n}\r\n\r\nexport function parseAlbum(platformName: PlatformName,\r\n                           url: string): Promise<AlbumParser> {\r\n    return createPlatform(platformName)\r\n        .createAlbumParser()\r\n        .create(() => new Promise<AlbumInput>(resolve => {\r\n            let input = new AlbumInput();\r\n            input.url = url;\r\n\r\n            resolve(input);\r\n        }));\r\n}\r\n\r\nexport function parseArtist(platformName: PlatformName,\r\n                            url: string): Promise<ArtistParser> {\r\n    return createPlatform(platformName)\r\n        .createArtistParser()\r\n        .create(() => new Promise<ArtistInput>(resolve => {\r\n            let input = new ArtistInput();\r\n            input.url = url;\r\n\r\n            resolve(input);\r\n        }));\r\n}\r\n\r\nexport function parsePlaylist(platformName: PlatformName,\r\n                              url: string): Promise<PlaylistParser> {\r\n    return createPlatform(platformName)\r\n        .createPlaylistParser()\r\n        .create(() => new Promise<PlaylistInput>(resolve => {\r\n            let input = new PlaylistInput();\r\n            input.url = url;\r\n\r\n            resolve(input);\r\n        }));\r\n}\r\n\r\nexport function parseSearch(platformName: PlatformName,\r\n                            query: string): Promise<SearchParser> {\r\n    return createPlatform(platformName)\r\n        .createSearchParser()\r\n        .create(() => new Promise<SearchInput>(resolve => {\r\n            let input = new SearchInput();\r\n            input.query = query;\r\n\r\n            resolve(input);\r\n        }));\r\n}\r\n"]}