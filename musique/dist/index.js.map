{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import * as Promise from \"bluebird\";\r\n\r\nimport SongInput from \"./input/song_input\";\r\nimport SongOutput from \"./output/song_output\";\r\nimport SongContent from \"./content/song_content\";\r\nimport SongParser from \"./parser/song_parser\";\r\nimport AlbumInput from \"./input/album_input\";\r\nimport AlbumOutput from \"./output/album_output\";\r\nimport AlbumContent from \"./content/album_content\";\r\nimport AlbumParser from \"./parser/album_parser\";\r\nimport ArtistInput from \"./input/artist_input\";\r\nimport ArtistOutput from \"./output/artist_output\";\r\nimport ArtistContent from \"./content/artist_content\";\r\nimport ArtistParser from \"./parser/artist_parser\";\r\nimport PlaylistInput from \"./input/playlist_input\";\r\nimport PlaylistOutput from \"./output/playlist_output\";\r\nimport PlaylistContent from \"./content/playlist_content\";\r\nimport PlaylistParser from \"./parser/playlist_parser\";\r\nimport SearchInput from \"./input/search_input\";\r\nimport SearchOutput from \"./output/search_output\";\r\nimport SearchContent from \"./content/search_content\";\r\nimport SearchParser from \"./parser/search_parser\";\r\nimport Platforms from \"./platform/platforms\";\r\n\r\nexport {\r\n    SongInput, SongOutput, SongContent, SongParser,\r\n    AlbumInput, AlbumOutput, AlbumContent, AlbumParser,\r\n    ArtistInput, ArtistOutput, ArtistContent, ArtistParser,\r\n    PlaylistInput, PlaylistOutput, PlaylistContent, PlaylistParser,\r\n    SearchInput, SearchOutput, SearchContent, SearchParser\r\n};\r\n\r\nlet platforms = new Platforms();\r\n\r\nexport function parseSong(platformName: keyof Platforms,\r\n                          url: string): Promise<SongParser> {\r\n    return platforms[platformName].createSongParser()\r\n        .create(() => new Promise<SongInput>(resolve => {\r\n            let input = new SongInput();\r\n            input.url = url;\r\n\r\n            resolve(input);\r\n        }));\r\n}\r\n\r\nexport function parseAlbum(platformName: keyof Platforms,\r\n                           url: string): Promise<AlbumParser> {\r\n    return platforms[platformName].createAlbumParser()\r\n        .create(() => new Promise<AlbumInput>(resolve => {\r\n            let input = new AlbumInput();\r\n            input.url = url;\r\n\r\n            resolve(input);\r\n        }));\r\n}\r\n\r\nexport function parseArtist(platformName: keyof Platforms,\r\n                            url: string): Promise<ArtistParser> {\r\n    return platforms[platformName].createArtistParser()\r\n        .create(() => new Promise<ArtistInput>(resolve => {\r\n            let input = new ArtistInput();\r\n            input.url = url;\r\n\r\n            resolve(input);\r\n        }));\r\n}\r\n\r\nexport function parsePlaylist(platformName: keyof Platforms,\r\n                              url: string): Promise<PlaylistParser> {\r\n    return platforms[platformName].createPlaylistParser()\r\n        .create(() => new Promise<PlaylistInput>(resolve => {\r\n            let input = new PlaylistInput();\r\n            input.url = url;\r\n\r\n            resolve(input);\r\n        }));\r\n}\r\n\r\nexport function parseSearch(platformName: keyof Platforms,\r\n                            query: string): Promise<SearchParser> {\r\n    return platforms[platformName].createSearchParser()\r\n        .create(() => new Promise<SearchInput>(resolve => {\r\n            let input = new SearchInput();\r\n            input.query = query;\r\n\r\n            resolve(input);\r\n        }));\r\n}\r\n"]}