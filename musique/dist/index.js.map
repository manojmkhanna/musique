{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import * as Promise from \"bluebird\";\r\n\r\nimport SongInput from \"./input/song_input\";\r\nimport SongOutput from \"./output/song_output\";\r\nimport SongContent from \"./content/song_content\";\r\nimport SongParser from \"./parser/song_parser\";\r\nimport AlbumInput from \"./input/album_input\";\r\nimport AlbumOutput from \"./output/album_output\";\r\nimport AlbumContent from \"./content/album_content\";\r\nimport AlbumParser from \"./parser/album_parser\";\r\nimport ArtistInput from \"./input/artist_input\";\r\nimport ArtistOutput from \"./output/artist_output\";\r\nimport ArtistContent from \"./content/artist_content\";\r\nimport ArtistParser from \"./parser/artist_parser\";\r\nimport PlaylistInput from \"./input/playlist_input\";\r\nimport PlaylistOutput from \"./output/playlist_output\";\r\nimport PlaylistContent from \"./content/playlist_content\";\r\nimport PlaylistParser from \"./parser/playlist_parser\";\r\nimport SearchInput from \"./input/search_input\";\r\nimport SearchOutput from \"./output/search_output\";\r\nimport SearchContent from \"./content/search_content\";\r\nimport SearchParser from \"./parser/search_parser\";\r\nimport Platform from \"./platform/platform\";\r\nimport DeezerPlatform from \"./other/deezer/deezer_platform\";\r\nimport SaavnPlatform from \"./other/saavn/saavn_platform\";\r\n\r\nexport {\r\n    SongInput, SongOutput, SongContent, SongParser,\r\n    AlbumInput, AlbumOutput, AlbumContent, AlbumParser,\r\n    ArtistInput, ArtistOutput, ArtistContent, ArtistParser,\r\n    PlaylistInput, PlaylistOutput, PlaylistContent, PlaylistParser,\r\n    SearchInput, SearchOutput, SearchContent, SearchParser\r\n};\r\n\r\nexport type PlatformName = \"deezer\" | \"saavn\";\r\n\r\nlet deezerPlatform: DeezerPlatform;\r\nlet saavnPlatform: SaavnPlatform;\r\n\r\nfunction createPlatform(platformName: PlatformName): Platform {\r\n    if (platformName === \"deezer\") {\r\n        if (!deezerPlatform) {\r\n            deezerPlatform = new DeezerPlatform();\r\n        }\r\n\r\n        return deezerPlatform;\r\n    } else if (platformName === \"saavn\") {\r\n        if (!saavnPlatform) {\r\n            saavnPlatform = new SaavnPlatform();\r\n        }\r\n\r\n        return saavnPlatform;\r\n    } else {\r\n        throw new Error();\r\n    }\r\n}\r\n\r\nexport function parseSong(platformName: PlatformName, url: string): Promise<SongParser> {\r\n    return createPlatform(platformName).createSongParser()\r\n        .create(() => new Promise<SongInput>(resolve => {\r\n            let input = new SongInput();\r\n            input.url = url;\r\n\r\n            resolve(input);\r\n        }));\r\n}\r\n\r\nexport function parseAlbum(platformName: PlatformName, url: string): Promise<AlbumParser> {\r\n    return createPlatform(platformName).createAlbumParser()\r\n        .create(() => new Promise<AlbumInput>(resolve => {\r\n            let input = new AlbumInput();\r\n            input.url = url;\r\n\r\n            resolve(input);\r\n        }));\r\n}\r\n\r\nexport function parseArtist(platformName: PlatformName, url: string): Promise<ArtistParser> {\r\n    return createPlatform(platformName).createArtistParser()\r\n        .create(() => new Promise<ArtistInput>(resolve => {\r\n            let input = new ArtistInput();\r\n            input.url = url;\r\n\r\n            resolve(input);\r\n        }));\r\n}\r\n\r\nexport function parsePlaylist(platformName: PlatformName, url: string): Promise<PlaylistParser> {\r\n    return createPlatform(platformName).createPlaylistParser()\r\n        .create(() => new Promise<PlaylistInput>(resolve => {\r\n            let input = new PlaylistInput();\r\n            input.url = url;\r\n\r\n            resolve(input);\r\n        }));\r\n}\r\n\r\nexport function parseSearch(platformName: PlatformName, query: string): Promise<SearchParser> {\r\n    return createPlatform(platformName).createSearchParser()\r\n        .create(() => new Promise<SearchInput>(resolve => {\r\n            let input = new SearchInput();\r\n            input.query = query;\r\n\r\n            resolve(input);\r\n        }));\r\n}\r\n"]}