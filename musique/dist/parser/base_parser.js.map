{"version":3,"sources":["../src/parser/base_parser.ts"],"names":[],"mappings":";;AAAA,qCAA+B;AAC/B,oCAAoC;AAOpC,gBACiD,SAAQ,gBAAe;IACpE,YAA6B,QAAkB;QAC3C,KAAK,EAAE,CAAC;QADiB,aAAQ,GAAR,QAAQ,CAAU;IAE/C,CAAC;IAEM,KAAK;QACR,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IAES,SAAS;QACf,MAAM,CAAC,IAAI,OAAO,CAAS,OAAO;YAC9B,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,QAAQ;QACX,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IAC1D,CAAC;CACJ;AAnBD,6BAmBC","file":"base_parser.js","sourcesContent":["import {Parser} from \"parsque\";\r\nimport * as Promise from \"bluebird\";\r\n\r\nimport BaseInput from \"../input/base_input\";\r\nimport BaseOutput from \"../output/base_output\";\r\nimport BaseContent from \"../content/base_content\";\r\nimport Platform from \"../platform/platform\";\r\n\r\nexport default class BaseParser<I extends BaseInput,\r\n    O extends BaseOutput, C extends BaseContent> extends Parser<I, O, C> {\r\n    public constructor(protected platform: Platform) {\r\n        super();\r\n    }\r\n\r\n    public parse(): Promise<this> {\r\n        return this.parseUrl();\r\n    }\r\n\r\n    protected createUrl(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            resolve(this.input.url);\r\n        });\r\n    }\r\n\r\n    public parseUrl(): Promise<this> {\r\n        return this.parseValue(\"url\", () => this.createUrl());\r\n    }\r\n}\r\n"]}