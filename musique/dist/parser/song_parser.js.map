{"version":3,"sources":["../src/parser/song_parser.ts"],"names":[],"mappings":";;AAEA,+CAAuC;AAMvC,gBAAgC,SAAQ,qBAA8C;CAkCrF;AAlCD,6BAkCC","file":"song_parser.js","sourcesContent":["import * as Promise from \"bluebird\";\r\n\r\nimport BaseParser from \"./base_parser\";\r\nimport SongInput from \"../input/song_input\";\r\nimport SongOutput from \"../output/song_output\";\r\nimport SongContent from \"../content/song_content\";\r\nimport Platform from \"../platform/platform\";\r\n\r\nexport default class SongParser extends BaseParser<SongInput, SongOutput, SongContent> {\r\n    // public constructor(protected platform: Platform,\r\n    //                    private url: string = \"\",\r\n    //                    private params: object = {},\r\n    //                    private cookies: object = {}) {\r\n    //     super(platform);\r\n    // }\r\n    //\r\n    // protected createInput(): Promise<SongInput> {\r\n    //     return new Promise<SongInput>(resolve => {\r\n    //         let input: SongInput = new SongInput();\r\n    //         input.url = this.url;\r\n    //         input.params = this.params;\r\n    //         input.cookies = this.cookies;\r\n    //\r\n    //         resolve(input);\r\n    //     });\r\n    // }\r\n    //\r\n    // protected createOutput(): Promise<SongOutput> {\r\n    //     return new Promise<SongOutput>(resolve => {\r\n    //         resolve(new SongOutput());\r\n    //     });\r\n    // }\r\n    //\r\n    // protected createContent(): Promise<SongContent> {\r\n    //     return new Promise<SongContent>(resolve => {\r\n    //         resolve(new SongContent());\r\n    //     });\r\n    // }\r\n    //\r\n    // public parse(): Promise<this> {\r\n    //\r\n    // }\r\n}\r\n"]}