{"version":3,"sources":["../src/parser/song_parser.ts"],"names":[],"mappings":"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","file":"song_parser.js","sourcesContent":["import * as Promise from \"bluebird\";\r\n\r\nimport BaseParser from \"./base_parser\";\r\nimport SongInput from \"../input/song_input\";\r\nimport SongOutput from \"../output/song_output\";\r\nimport SongContent from \"../content/song_content\";\r\nimport AlbumOutput from \"../output/album_output\";\r\nimport ArtistOutput from \"../output/artist_output\";\r\n\r\nexport default class SongParser extends BaseParser<SongInput, SongOutput, SongContent> {\r\n    public parse(): Promise<this> {\r\n        return this.parseDuration()\r\n            .then(() => this.parseGenre())\r\n            .then(() => this.parseLyrics())\r\n            .then(() => this.parseMp3())\r\n            .then(() => this.parseRating())\r\n            .then(() => this.parseTitle())\r\n            .then(() => this.parseTrack())\r\n            .then(() => this.parseAlbum())\r\n            .then(() => this.parseArtists());\r\n    }\r\n\r\n    public parseDuration(): Promise<this> {\r\n        return this.parseValue(\"duration\", () => this.createDuration());\r\n    }\r\n\r\n    public parseGenre(): Promise<this> {\r\n        return this.parseValue(\"genre\", () => this.createGenre());\r\n    }\r\n\r\n    public parseLyrics(): Promise<this> {\r\n        return this.parseValue(\"lyrics\", () => this.createLyrics());\r\n    }\r\n\r\n    public parseMp3(): Promise<this> {\r\n        return this.parseValue(\"mp3\", () => this.createMp3());\r\n    }\r\n\r\n    public parseRating(): Promise<this> {\r\n        return this.parseValue(\"rating\", () => this.createRating());\r\n    }\r\n\r\n    public parseTitle(): Promise<this> {\r\n        return this.parseValue(\"title\", () => this.createTitle());\r\n    }\r\n\r\n    public parseTrack(): Promise<this> {\r\n        return this.parseValue(\"track\", () => this.createTrack());\r\n    }\r\n\r\n    public parseAlbum(outputParser?: (childParser: this) => Promise<any>): Promise<this> {\r\n        // if (outputParser == undefined) {\r\n        return this.parseValue(\"album\", () => this.createAlbum());\r\n        // } else {\r\n        //     return this.parseOutput(\"album\", () => new Promise<AlbumParser>(resolve => {\r\n        //         resolve(this.platform.createAlbumParser());\r\n        //     }), outputParser);\r\n        // }\r\n    }\r\n\r\n    public parseArtists(): Promise<this> {\r\n        return this.parseValue(\"artists\", () => this.createArtists());\r\n    }\r\n\r\n    protected createInput(): Promise<SongInput> {\r\n        return new Promise<SongInput>(resolve => {\r\n            resolve(new SongInput());\r\n        });\r\n    }\r\n\r\n    protected createOutput(): Promise<SongOutput> {\r\n        return new Promise<SongOutput>(resolve => {\r\n            resolve(new SongOutput());\r\n        });\r\n    }\r\n\r\n    protected createContent(): Promise<SongContent> {\r\n        return new Promise<SongContent>(resolve => {\r\n            resolve(new SongContent());\r\n        });\r\n    }\r\n\r\n    protected createDuration(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    protected createGenre(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    protected createLyrics(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    protected createMp3(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    protected createRating(): Promise<number> {\r\n        return new Promise<number>(resolve => {\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    protected createTitle(): Promise<string> {\r\n        return new Promise<string>(resolve => {\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    protected createTrack(): Promise<number> {\r\n        return new Promise<number>(resolve => {\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    protected createAlbum(): Promise<AlbumOutput> {\r\n        return new Promise<AlbumOutput>(resolve => {\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    protected createArtists(): Promise<ArtistOutput[]> {\r\n        return new Promise<ArtistOutput[]>(resolve => {\r\n            resolve();\r\n        });\r\n    }\r\n}\r\n"]}