{"version":3,"sources":["../src/parser/search_parser.ts"],"names":[],"mappings":"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","file":"search_parser.js","sourcesContent":["import {Parser} from \"parsque\";\r\nimport * as Promise from \"bluebird\";\r\n\r\nimport SearchInput from \"../input/search_input\";\r\nimport SearchOutput from \"../output/search_output\";\r\nimport SearchContent from \"../content/search_content\";\r\nimport Platform from \"../platform/platform\";\r\nimport SongOutput from \"../output/song_output\";\r\nimport SongParser from \"./song_parser\";\r\nimport AlbumOutput from \"../output/album_output\";\r\nimport AlbumParser from \"./album_parser\";\r\nimport ArtistOutput from \"../output/artist_output\";\r\nimport ArtistParser from \"./artist_parser\";\r\nimport PlaylistOutput from \"../output/playlist_output\";\r\nimport PlaylistParser from \"./playlist_parser\";\r\n\r\nexport default class SearchParser extends Parser<SearchInput, SearchOutput, SearchContent> {\r\n    public constructor(protected platform: Platform) {\r\n        super();\r\n    }\r\n\r\n    protected createInput(): Promise<SearchInput> {\r\n        return new Promise<SearchInput>(resolve => {\r\n            resolve(new SearchInput());\r\n        });\r\n    }\r\n\r\n    protected createOutput(): Promise<SearchOutput> {\r\n        return new Promise<SearchOutput>(resolve => {\r\n            resolve(new SearchOutput());\r\n        });\r\n    }\r\n\r\n    protected createContent(): Promise<SearchContent> {\r\n        return new Promise<SearchContent>(resolve => {\r\n            resolve(new SearchContent());\r\n        });\r\n    }\r\n\r\n    public parse(): Promise<this> {\r\n        return this.parseSongs()\r\n            .then(() => this.parseAlbums())\r\n            .then(() => this.parseArtists())\r\n            .then(() => this.parsePlaylists());\r\n    }\r\n\r\n    protected createSongs(): Promise<SongOutput[]> {\r\n        return new Promise<SongOutput[]>(resolve => {\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    protected createAlbums(): Promise<AlbumOutput[]> {\r\n        return new Promise<AlbumOutput[]>(resolve => {\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    protected createArtists(): Promise<ArtistOutput[]> {\r\n        return new Promise<ArtistOutput[]>(resolve => {\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    protected createPlaylists(): Promise<PlaylistOutput[]> {\r\n        return new Promise<PlaylistOutput[]>(resolve => {\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    public parseSongs(outputsParser?: (childParser: SongParser, index: number) => Promise<any>,\r\n                      ...indexes: number[]): Promise<this> {\r\n        if (outputsParser == undefined) {\r\n            return this.parseValue(\"songs\", () => this.createSongs());\r\n        } else {\r\n            return this.parseOutputs(\"songs\", () => new Promise<SongParser>(resolve => {\r\n                resolve(this.platform.createSongParser());\r\n            }), outputsParser, ...indexes);\r\n        }\r\n    }\r\n\r\n    public parseAlbums(outputsParser?: (childParser: AlbumParser, index: number) => Promise<any>,\r\n                       ...indexes: number[]): Promise<this> {\r\n        if (outputsParser == undefined) {\r\n            return this.parseValue(\"albums\", () => this.createAlbums());\r\n        } else {\r\n            return this.parseOutputs(\"albums\", () => new Promise<AlbumParser>(resolve => {\r\n                resolve(this.platform.createAlbumParser());\r\n            }), outputsParser, ...indexes);\r\n        }\r\n    }\r\n\r\n    public parseArtists(outputsParser?: (childParser: ArtistParser, index: number) => Promise<any>,\r\n                        ...indexes: number[]): Promise<this> {\r\n        if (outputsParser == undefined) {\r\n            return this.parseValue(\"artists\", () => this.createArtists());\r\n        } else {\r\n            return this.parseOutputs(\"artists\", () => new Promise<ArtistParser>(resolve => {\r\n                resolve(this.platform.createArtistParser());\r\n            }), outputsParser, ...indexes);\r\n        }\r\n    }\r\n\r\n    public parsePlaylists(outputsParser?: (childParser: PlaylistParser, index: number) => Promise<any>,\r\n                          ...indexes: number[]): Promise<this> {\r\n        if (outputsParser == undefined) {\r\n            return this.parseValue(\"playlists\", () => this.createPlaylists());\r\n        } else {\r\n            return this.parseOutputs(\"playlists\", () => new Promise<PlaylistParser>(resolve => {\r\n                resolve(this.platform.createPlaylistParser());\r\n            }), outputsParser, ...indexes);\r\n        }\r\n    }\r\n}\r\n"]}